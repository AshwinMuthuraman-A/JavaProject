package com.example.demo.repo;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.gridfs.GridFsOperations;
import org.springframework.data.mongodb.gridfs.GridFsTemplate;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.model.BinaryData;
import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;
import com.mongodb.client.gridfs.model.GridFSFile;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;

@Service
public class BinaryDataService {
	
	@Autowired
	private GridFsTemplate gfsTemplate;
	
	@Autowired
	private GridFsOperations gfsOperations;
	
	public String addFile(MultipartFile upload) throws IOException {
		DBObject metadata = new BasicDBObject();
		metadata.put("filesize", upload.getSize());
		Object fileID = gfsTemplate.store(upload.getInputStream(), upload.getOriginalFilename(), upload.getContentType(), metadata);
		return fileID.toString();
	}
	
	public BinaryData downloadFile(String id) throws IOException {
		GridFSFile gfsFile = gfsTemplate.findOne(new Query(Criteria.where("_id").is(id)));
		return null;
	}
	
}
