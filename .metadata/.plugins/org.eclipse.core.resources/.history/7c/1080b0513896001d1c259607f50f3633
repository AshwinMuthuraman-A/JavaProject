package com.example.demo.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.Exceptions.UserCollectionException;
import com.example.demo.model.User;
import com.example.demo.repo.UserRepo;
import com.example.demo.services.UserService;

import jakarta.validation.ConstraintViolationException;

@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	private UserRepo userRepos;
	
	@Autowired
	private UserService userService;
	
	@PostMapping(value = "/signup")
	public ResponseEntity<?> createStudent(@RequestBody User user) {
		try {
			String userId = userService.createUser(user);
			return new ResponseEntity<String> (userId, HttpStatus.OK);
		} catch(ConstraintViolationException cve) {
			return new ResponseEntity<>(cve.getMessage(), HttpStatus.UNPROCESSABLE_ENTITY);
		} catch (UserCollectionException uce) {
			return new ResponseEntity<>(uce.getMessage(), HttpStatus.CONFLICT);
		}
	}
	
}
	
	
	
	@PutMapping(value = "/update/{text}")
	public String updateStudent(@RequestBody Student s, @PathVariable String text) {
		return studentservice.update(text, s);
	}
	
	@DeleteMapping(value = "/delete/{text}")
	public Student deleteStudent(@PathVariable String text) {
		return studentservice.remove(text);
	}
}
